// Code generated by goctl. DO NOT EDIT.
// Source: qa.proto

package server

import (
	"context"

	"MouHu/service/app/qa/rpc/internal/logic"
	"MouHu/service/app/qa/rpc/internal/svc"
	"MouHu/service/app/qa/rpc/types/qa"
)

type QaServer struct {
	svcCtx *svc.ServiceContext
	qa.UnimplementedQaServer
}

func NewQaServer(svcCtx *svc.ServiceContext) *QaServer {
	return &QaServer{
		svcCtx: svcCtx,
	}
}

func (s *QaServer) PubQuestion(ctx context.Context, in *qa.PubQuestionReq) (*qa.CommonResp, error) {
	l := logic.NewPubQuestionLogic(ctx, s.svcCtx)
	return l.PubQuestion(in)
}

func (s *QaServer) AnsQuestion(ctx context.Context, in *qa.AnsQuestionReq) (*qa.CommonResp, error) {
	l := logic.NewAnsQuestionLogic(ctx, s.svcCtx)
	return l.AnsQuestion(in)
}

func (s *QaServer) ComAnswer(ctx context.Context, in *qa.ComAnswerReq) (*qa.CommonResp, error) {
	l := logic.NewComAnswerLogic(ctx, s.svcCtx)
	return l.ComAnswer(in)
}

func (s *QaServer) GetQuestion(ctx context.Context, in *qa.GetQuestionReq) (*qa.GetQuestionResp, error) {
	l := logic.NewGetQuestionLogic(ctx, s.svcCtx)
	return l.GetQuestion(in)
}

func (s *QaServer) GetAnswer(ctx context.Context, in *qa.GetAnswerReq) (*qa.GetAnswerResp, error) {
	l := logic.NewGetAnswerLogic(ctx, s.svcCtx)
	return l.GetAnswer(in)
}

func (s *QaServer) GetCommit(ctx context.Context, in *qa.GetCommitReq) (*qa.GetCommitResp, error) {
	l := logic.NewGetCommitLogic(ctx, s.svcCtx)
	return l.GetCommit(in)
}

func (s *QaServer) DelQuestion(ctx context.Context, in *qa.DelQuestionReq) (*qa.CommonResp, error) {
	l := logic.NewDelQuestionLogic(ctx, s.svcCtx)
	return l.DelQuestion(in)
}

func (s *QaServer) DelAnswerOrCommit(ctx context.Context, in *qa.DelAnswerOrCommitReq) (*qa.CommonResp, error) {
	l := logic.NewDelAnswerOrCommitLogic(ctx, s.svcCtx)
	return l.DelAnswerOrCommit(in)
}

func (s *QaServer) AltQuestion(ctx context.Context, in *qa.AltQuestionReq) (*qa.CommonResp, error) {
	l := logic.NewAltQuestionLogic(ctx, s.svcCtx)
	return l.AltQuestion(in)
}

func (s *QaServer) AltAnswerOrCommit(ctx context.Context, in *qa.AltAnswerOrCommitReq) (*qa.CommonResp, error) {
	l := logic.NewAltAnswerOrCommitLogic(ctx, s.svcCtx)
	return l.AltAnswerOrCommit(in)
}
