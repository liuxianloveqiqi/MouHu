// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: qa.proto

package qa

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuestionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64                  `protobuf:"varint,1,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	UserId     int64                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Title      string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Content    string                 `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
}

func (x *QuestionList) Reset() {
	*x = QuestionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionList) ProtoMessage() {}

func (x *QuestionList) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionList.ProtoReflect.Descriptor instead.
func (*QuestionList) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{0}
}

func (x *QuestionList) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *QuestionList) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *QuestionList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionList) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QuestionList) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *QuestionList) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *QuestionList) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

type AnswerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId   int64                  `protobuf:"varint,1,opt,name=AnswerId,proto3" json:"AnswerId,omitempty"`
	UserId     int64                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	QuestionId int64                  `protobuf:"varint,3,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	ParentId   int64                  `protobuf:"varint,4,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Content    string                 `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	IsAnswer   bool                   `protobuf:"varint,6,opt,name=IsAnswer,proto3" json:"IsAnswer,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
}

func (x *AnswerList) Reset() {
	*x = AnswerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerList) ProtoMessage() {}

func (x *AnswerList) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerList.ProtoReflect.Descriptor instead.
func (*AnswerList) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{1}
}

func (x *AnswerList) GetAnswerId() int64 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *AnswerList) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AnswerList) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *AnswerList) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AnswerList) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AnswerList) GetIsAnswer() bool {
	if x != nil {
		return x.IsAnswer
	}
	return false
}

func (x *AnswerList) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *AnswerList) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *AnswerList) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

type PubQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	UserId  int64  `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *PubQuestionReq) Reset() {
	*x = PubQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubQuestionReq) ProtoMessage() {}

func (x *PubQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubQuestionReq.ProtoReflect.Descriptor instead.
func (*PubQuestionReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{2}
}

func (x *PubQuestionReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PubQuestionReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PubQuestionReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AnsQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64  `protobuf:"varint,1,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	Content    string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	UserId     int64  `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *AnsQuestionReq) Reset() {
	*x = AnsQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnsQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnsQuestionReq) ProtoMessage() {}

func (x *AnsQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnsQuestionReq.ProtoReflect.Descriptor instead.
func (*AnsQuestionReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{3}
}

func (x *AnsQuestionReq) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *AnsQuestionReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AnsQuestionReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ComAnswerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int64  `protobuf:"varint,1,opt,name=AnswerId,proto3" json:"AnswerId,omitempty"`
	Content  string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	UserId   int64  `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ComAnswerReq) Reset() {
	*x = ComAnswerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComAnswerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComAnswerReq) ProtoMessage() {}

func (x *ComAnswerReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComAnswerReq.ProtoReflect.Descriptor instead.
func (*ComAnswerReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{4}
}

func (x *ComAnswerReq) GetAnswerId() int64 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *ComAnswerReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ComAnswerReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetQuestionReq) Reset() {
	*x = GetQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionReq) ProtoMessage() {}

func (x *GetQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionReq.ProtoReflect.Descriptor instead.
func (*GetQuestionReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{5}
}

func (x *GetQuestionReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetQuestionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question []*QuestionList `protobuf:"bytes,1,rep,name=question,proto3" json:"question,omitempty"`
}

func (x *GetQuestionResp) Reset() {
	*x = GetQuestionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionResp) ProtoMessage() {}

func (x *GetQuestionResp) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionResp.ProtoReflect.Descriptor instead.
func (*GetQuestionResp) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{6}
}

func (x *GetQuestionResp) GetQuestion() []*QuestionList {
	if x != nil {
		return x.Question
	}
	return nil
}

type GetAnswerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetAnswerReq) Reset() {
	*x = GetAnswerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerReq) ProtoMessage() {}

func (x *GetAnswerReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerReq.ProtoReflect.Descriptor instead.
func (*GetAnswerReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{7}
}

func (x *GetAnswerReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetAnswerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer []*AnswerList `protobuf:"bytes,1,rep,name=answer,proto3" json:"answer,omitempty"`
}

func (x *GetAnswerResp) Reset() {
	*x = GetAnswerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerResp) ProtoMessage() {}

func (x *GetAnswerResp) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerResp.ProtoReflect.Descriptor instead.
func (*GetAnswerResp) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{8}
}

func (x *GetAnswerResp) GetAnswer() []*AnswerList {
	if x != nil {
		return x.Answer
	}
	return nil
}

type GetCommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetCommitReq) Reset() {
	*x = GetCommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitReq) ProtoMessage() {}

func (x *GetCommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitReq.ProtoReflect.Descriptor instead.
func (*GetCommitReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{9}
}

func (x *GetCommitReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetCommitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commit []*AnswerList `protobuf:"bytes,1,rep,name=commit,proto3" json:"commit,omitempty"`
}

func (x *GetCommitResp) Reset() {
	*x = GetCommitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitResp) ProtoMessage() {}

func (x *GetCommitResp) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitResp.ProtoReflect.Descriptor instead.
func (*GetCommitResp) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{10}
}

func (x *GetCommitResp) GetCommit() []*AnswerList {
	if x != nil {
		return x.Commit
	}
	return nil
}

type DelQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64 `protobuf:"varint,1,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
}

func (x *DelQuestionReq) Reset() {
	*x = DelQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelQuestionReq) ProtoMessage() {}

func (x *DelQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelQuestionReq.ProtoReflect.Descriptor instead.
func (*DelQuestionReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{11}
}

func (x *DelQuestionReq) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type DelAnswerOrCommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerOrCommitId int64 `protobuf:"varint,1,opt,name=AnswerOrCommitId,proto3" json:"AnswerOrCommitId,omitempty"`
}

func (x *DelAnswerOrCommitReq) Reset() {
	*x = DelAnswerOrCommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAnswerOrCommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAnswerOrCommitReq) ProtoMessage() {}

func (x *DelAnswerOrCommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAnswerOrCommitReq.ProtoReflect.Descriptor instead.
func (*DelAnswerOrCommitReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{12}
}

func (x *DelAnswerOrCommitReq) GetAnswerOrCommitId() int64 {
	if x != nil {
		return x.AnswerOrCommitId
	}
	return 0
}

type AltQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64  `protobuf:"varint,1,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *AltQuestionReq) Reset() {
	*x = AltQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AltQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltQuestionReq) ProtoMessage() {}

func (x *AltQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltQuestionReq.ProtoReflect.Descriptor instead.
func (*AltQuestionReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{13}
}

func (x *AltQuestionReq) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *AltQuestionReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AltQuestionReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AltAnswerOrCommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerOrCommitId int64  `protobuf:"varint,1,opt,name=AnswerOrCommitId,proto3" json:"AnswerOrCommitId,omitempty"`
	Content          string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *AltAnswerOrCommitReq) Reset() {
	*x = AltAnswerOrCommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AltAnswerOrCommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltAnswerOrCommitReq) ProtoMessage() {}

func (x *AltAnswerOrCommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltAnswerOrCommitReq.ProtoReflect.Descriptor instead.
func (*AltAnswerOrCommitReq) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{14}
}

func (x *AltAnswerOrCommitReq) GetAnswerOrCommitId() int64 {
	if x != nil {
		return x.AnswerOrCommitId
	}
	return 0
}

func (x *AltAnswerOrCommitReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qa_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_qa_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_qa_proto_rawDescGZIP(), []int{15}
}

func (x *CommonResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_qa_proto protoreflect.FileDescriptor

var file_qa_proto_rawDesc = []byte{
	0x0a, 0x08, 0x71, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xaa, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xe6, 0x02, 0x0a, 0x0a, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x0e, 0x41, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x32, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3d, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c,
	0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x22, 0x30, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x4f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a,
	0x10, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x0e, 0x41, 0x6c, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x14, 0x41,
	0x6c, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x91, 0x05, 0x0a, 0x02, 0x71, 0x61, 0x12, 0x3d, 0x0a, 0x0b,
	0x50, 0x75, 0x62, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x41,
	0x6e, 0x73, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x4f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3d, 0x0a, 0x0b, 0x41, 0x6c, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49,
	0x0a, 0x11, 0x41, 0x6c, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x12, 0x1e, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x6c, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x71,
	0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qa_proto_rawDescOnce sync.Once
	file_qa_proto_rawDescData = file_qa_proto_rawDesc
)

func file_qa_proto_rawDescGZIP() []byte {
	file_qa_proto_rawDescOnce.Do(func() {
		file_qa_proto_rawDescData = protoimpl.X.CompressGZIP(file_qa_proto_rawDescData)
	})
	return file_qa_proto_rawDescData
}

var file_qa_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_qa_proto_goTypes = []interface{}{
	(*QuestionList)(nil),          // 0: question.QuestionList
	(*AnswerList)(nil),            // 1: question.AnswerList
	(*PubQuestionReq)(nil),        // 2: question.PubQuestionReq
	(*AnsQuestionReq)(nil),        // 3: question.AnsQuestionReq
	(*ComAnswerReq)(nil),          // 4: question.ComAnswerReq
	(*GetQuestionReq)(nil),        // 5: question.GetQuestionReq
	(*GetQuestionResp)(nil),       // 6: question.GetQuestionResp
	(*GetAnswerReq)(nil),          // 7: question.GetAnswerReq
	(*GetAnswerResp)(nil),         // 8: question.GetAnswerResp
	(*GetCommitReq)(nil),          // 9: question.GetCommitReq
	(*GetCommitResp)(nil),         // 10: question.GetCommitResp
	(*DelQuestionReq)(nil),        // 11: question.DelQuestionReq
	(*DelAnswerOrCommitReq)(nil),  // 12: question.DelAnswerOrCommitReq
	(*AltQuestionReq)(nil),        // 13: question.AltQuestionReq
	(*AltAnswerOrCommitReq)(nil),  // 14: question.AltAnswerOrCommitReq
	(*CommonResp)(nil),            // 15: question.CommonResp
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
}
var file_qa_proto_depIdxs = []int32{
	16, // 0: question.QuestionList.CreateTime:type_name -> google.protobuf.Timestamp
	16, // 1: question.QuestionList.UpdateTime:type_name -> google.protobuf.Timestamp
	16, // 2: question.QuestionList.DeleteTime:type_name -> google.protobuf.Timestamp
	16, // 3: question.AnswerList.CreateTime:type_name -> google.protobuf.Timestamp
	16, // 4: question.AnswerList.UpdateTime:type_name -> google.protobuf.Timestamp
	16, // 5: question.AnswerList.DeleteTime:type_name -> google.protobuf.Timestamp
	0,  // 6: question.GetQuestionResp.question:type_name -> question.QuestionList
	1,  // 7: question.GetAnswerResp.answer:type_name -> question.AnswerList
	1,  // 8: question.GetCommitResp.commit:type_name -> question.AnswerList
	2,  // 9: question.qa.PubQuestion:input_type -> question.PubQuestionReq
	3,  // 10: question.qa.AnsQuestion:input_type -> question.AnsQuestionReq
	4,  // 11: question.qa.ComAnswer:input_type -> question.ComAnswerReq
	5,  // 12: question.qa.GetQuestion:input_type -> question.GetQuestionReq
	7,  // 13: question.qa.GetAnswer:input_type -> question.GetAnswerReq
	9,  // 14: question.qa.GetCommit:input_type -> question.GetCommitReq
	11, // 15: question.qa.DelQuestion:input_type -> question.DelQuestionReq
	12, // 16: question.qa.DelAnswerOrCommit:input_type -> question.DelAnswerOrCommitReq
	13, // 17: question.qa.AltQuestion:input_type -> question.AltQuestionReq
	14, // 18: question.qa.AltAnswerOrCommit:input_type -> question.AltAnswerOrCommitReq
	15, // 19: question.qa.PubQuestion:output_type -> question.CommonResp
	15, // 20: question.qa.AnsQuestion:output_type -> question.CommonResp
	15, // 21: question.qa.ComAnswer:output_type -> question.CommonResp
	6,  // 22: question.qa.GetQuestion:output_type -> question.GetQuestionResp
	8,  // 23: question.qa.GetAnswer:output_type -> question.GetAnswerResp
	10, // 24: question.qa.GetCommit:output_type -> question.GetCommitResp
	15, // 25: question.qa.DelQuestion:output_type -> question.CommonResp
	15, // 26: question.qa.DelAnswerOrCommit:output_type -> question.CommonResp
	15, // 27: question.qa.AltQuestion:output_type -> question.CommonResp
	15, // 28: question.qa.AltAnswerOrCommit:output_type -> question.CommonResp
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_qa_proto_init() }
func file_qa_proto_init() {
	if File_qa_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qa_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnsQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComAnswerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAnswerOrCommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AltQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AltAnswerOrCommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qa_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qa_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qa_proto_goTypes,
		DependencyIndexes: file_qa_proto_depIdxs,
		MessageInfos:      file_qa_proto_msgTypes,
	}.Build()
	File_qa_proto = out.File
	file_qa_proto_rawDesc = nil
	file_qa_proto_goTypes = nil
	file_qa_proto_depIdxs = nil
}
